#--------------------------------------------------------------#
#	Columbia SMT Pipeline Configuration file
#--------------------------------------------------------------#

#--------------------------------------------------------------#
#----------------------- GENERAL ------------------------------#
#--------------------------------------------------------------#
[General]
Name			= Su #Name of this configuration
Email			= 1@gmail.com

SystemAttributesSuffix	= #.print-alignment
	# MosesVersion values are 2009-04-13, 2010-08-13 or 2012-02-06:
MosesVersion		= 2012-02-06

	# The name of the set used for training:
TrainingSet		= datastore 

        # LogFile:
LogFile                 = /export/projects/nlpeducation/nlpcommands/mosesmodel/${General.TrainingSet}/logs/pipeline.logs/commands.log

	# The output directory of the training step:
OutputDir		= /export/projects/nlpeducation/nlpcommands/mosesmodel/${General.TrainingSet}/moses.${General.MosesVersion}${General.SystemAttributesSuffix}

	# Project Main Directories:
MainProjectDir		= /export/projects/nlp/BOLT-MT/backup
ToolsDir		= ${General.MainProjectDir}/tools
PipelineScriptsDir	= ${General.MainProjectDir}/smt-pipeline/scripts
AuxilliaryScriptsDir	= ${General.PipelineScriptsDir}/auxilliary-scripts
PostprocessScriptsDir	= ${General.AuxilliaryScriptsDir}/postprocess
PreprocessScriptsDir	= ${General.AuxilliaryScriptsDir}/preprocess

DataDir			= /export/home/ab3900/commandsToTasks/moses-training

	# Moses Main Directories:
#MosesVersionDir		= /usr/local/nlp/test/moses-decoder/${General.MosesVersion}
MosesVersionDir		= ${General.ToolsDir}/moses-decoder/${General.MosesVersion}
MosesScriptsDir		= ${General.MosesVersionDir}/scripts
MosesBinDir		= ${General.MosesVersionDir}/bin
DataPreparingScriptsDir	= ${General.MosesVersionDir}/data-preparing

	# MT Evaluation Scripts Directorie:
EvaluationScriptDir	= ${General.ToolsDir}/scripts/evaluation
#EvaluationScriptDir	= /usr/local/nlp/test/moses-decoder/${General.MosesVersion}/evaluation
#EvaluationScriptDir	= ${General.MainProjectDir}/tools/scripts/evaluation

#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#----------- SCRIPTS AND EXECUTABLES --------------------------#
#--------------------------------------------------------------#
[ScriptsAndExecutables]
AssertScriptsAndExecutablesExist = 1
MosesExecutable 		= ${General.MosesBinDir}/moses
ProcessPhraseTableExecutable 	= ${General.MosesBinDir}/processPhraseTable
ProcessLexicalTableExecutable 	= ${General.MosesBinDir}/processLexicalTable

FilterModelGivenInputScript 	= ${General.MosesScriptsDir}/training/filter-model-given-input.pl
GeneralMertCmd 			= ${General.MosesScriptsDir}/training/mert-moses.pl

CleanCorpusScript 		= ${General.AuxilliaryScriptsDir}/clean-corpus-n.perl
StatsigFilterRawScript 		= ${General.AuxilliaryScriptsDir}/statsig_filter_raw.pl
RosettaNBestNewScript 		= ${General.AuxilliaryScriptsDir}/rosetta_nbest_new.pl
ReplaceTextScript 		= ${General.AuxilliaryScriptsDir}/replace-text.pl
ReplaceTextModScript 		= ${General.AuxilliaryScriptsDir}/replace-text.mod.pl

ReuseWeightsScript 		= ${General.DataPreparingScriptsDir}/reuse-weights.perl

TrainModelScript_OLD 		= ${General.MosesScriptsDir}/training/train-factored-phrase-model.perl
TrainModelScript_NEW 		= ${General.ToolsDir}/scripts/moses-scripts/${General.MosesVersion}/training/train-model.perl
#TrainModelScript_NEW 		= ${General.MosesScriptsDir}/training/train-model.perl

MoveTuningWeightsScript		= ${General.AuxilliaryScriptsDir}/tuning/move-tuning-weights-to-new-dir-after-tuning.sh

#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#----------- RawTrainingCorpora -------------------------------#                                                                             
#--------------------------------------------------------------#
[RawTrainingCorpora]
Dir		= ${General.DataDir}
FileNameWOExt	= dataset     	# source corpora is Dir/FileNameWOExt.SrcLangExt                                                               
				# and the target is Dir/FileNameWOExt.DstLangExt
SrcLangExt	= nat
DstLangExt	= sem
#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#----------------------- CLEANING -----------------------------#
#--------------------------------------------------------------#
[CleanCorpora]
Run			= 1
CleanCorporaSubDir	= CleanCorpora
CleanCorporaWOExt	= ${RawTrainingCorpora.FileNameWOExt}.sent-length-checked
Min			= 0
Max			= 100
#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#----------------------- TRAINING -----------------------------#
#--------------------------------------------------------------#
[Training]
Run			= 1
TrainingSubDir		= training

	#---------------------
	#For deep understanding of the following configuration parameters, please refer to Moses' manual
	#---------------------

Config			= moses.ini
BinConfig		= moses.bin.ini
LatticeConfig		= moses.lattice.ini
	#General form: "factor:order:filename:[type][ factor:order:filename:[type]]*"
	#where type=0 for srilm (default), 1 for irstlm
LangModel		= 0:5:/export/projects/nlp/GALE/backup/work/GALE5/lms/galep4_all/galep4_all.5gram.blm:1 0:5:/export/projects/nlp/GALE/backup/work/GALE5/lms/CMU/GigaWordV234+BBC-tune-mt03-mt04-big.bqlm.mm:1
	#---------------------
FirstStep		= 1 	#from 1 to 9, default=1
LastStep		= 9	#from 1 to 9, default=9
	#---------------------
PhraseWordAlignment	= 1
Verbose			= 1	#allows for more detailed output: default (1), summary statistics (2), full progress report (3)
			#Note: not used in the current version of the "train-factored-phrase-model.perl"
MaxPhraseLength		= 8	#maximum length of phrases entered into phrase table (default 7)
			#heuristic used for word alignment, default=grow-diag-final,
			#valid values: intersect, union, grow, srctotgt, tgttosrc, -final, -diag, -final-and.
Alignment		= grow-diag-final-and
			#default "distance"
			#valid values: "msd-f", "msd-fe", "msd-bidirectional-f", "msd-bidirectional-fe", "monotonicity-f", "monotonicity-fe", "monotonicity-bidirectional-f", "monotonicity-bidirectional-fe", "distance"
Reordering		= msd-bidirectional-fe
NoLexicalWeighting	= 0	#default "0" (i.e. use lexical weighting)
			#The set of options passed to GIZA++ tool. default do not use this option (i.e. leave commented)
			#default= "p0=.999,m1=5,m2=0,m3=3,m4=3,nodumps=1,onlyaldumps=1,nsmooth=4,model1dumpfrequency=1,model4smoothfactor=0.4"
GizaOptions		=
MGizaCPUs               = 4
Parallel		= 1  #Use as many processors as possible on the cluster (default=0)
ReorderingSmooth	= 0.5  #default 0.5
	                #Note: not used in the current version of the script
NoDebug			= 0   #default=0 i.e. debug=1 which means do not remove any temporary files
			#general form: "sf[,sf]*-tf[,tf]*" where sf=source_factor_index, tf=target_factor_index
			#e.g. "0,1,2-0,1", default: "0-0"
#AlignmentFactors	= "1-1"
AlignmentFactors	= "0-0"
			#general form: "sf[,sf]*-tf[,tf]*[+sf[,sf]*-tf[,tf]*]*" where sf=source_factor_index, tf=target_factor_index
			#e.g. "0-0+0,1,2-0,1", default: "0-0"
TranslationFactors	= "0-0" 
			#general form: "sf[,sf]*-tf[,tf]*[+sf[,sf]*-tf[,tf]*]*", where sf=source_factor_index, tf=target_factor_index
			#e.g. "0-0+0,1-0,1", default "0-0" = single factor i.e. if (defined Reordering && ! defined DecodingSteps)
ReorderingFactors	= "0-0"
			#general form: "sf[,sf]*-tf[,tf]*[+sf[,sf]*-tf[,tf]*]*" where sf=source_factor_index, tf=target_factor_index
			#e.g. "0-0+0,1-0,1", default not defined
GenerationFactors	= 
DecodingSteps		= "t0"  #default "t0"
	                #generally e.g. "t0,g0,t1,g1:t2"
InputFactorMax		= 0 #for writing in the produced moses.ini. default is to calculate by parsing the "translation-factors" argument ,otherwise use this argument)
FactorDelimiter		= '|'  #default "|"
PhraseTranslationTable	= 
ReorderingTable		=  
GenerationTable		=  
GenerationType		= double 
Parts			= 1
Direction		=  
OnlyPrintGiza		= 0  		#default =0, set to 1 to skip running GIZA

#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#---------- BINARIZING PHRASE AND REORDERING TABLES -----------#
#--------------------------------------------------------------#
[BinarizeTables]
Run				= 0
ModelDir			= ${General.OutputDir}/${Training.TrainingSubDir}/model
BinarizePhraseTable		= 1
InputPhraseTable		= ${ModelDir}/phrase-table.0-0.gz
OutputPhraseTablePrefix		= ${BinarizeTables.ModelDir}/phrase-table.bin
PhraseTableAlreadySorted	= 1
ttable				= 0 0 -
nscores				= 5
AlignmentInfo 			= ${Training.PhraseWordAlignment}
IncludeAlignmentsInBinPt	= 2 	# { 0 (don't include), 1 (include), 2 (do both) }

BinarizeReorderingTable		= 1
InputReorderingTable		= ${BinarizeTables.ModelDir}/reordering-table.0-0.wbe-${Training.Reordering}.gz
OutputReorderingTablePrefix	= ${BinarizeTables.ModelDir}/reordering-table.wbe-${Training.Reordering}.bin
ReorderingTableAlreadySorted	= 1

#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#------------------------- TUNING -----------------------------#
#--------------------------------------------------------------#
[Tuning]
Run			= 0

TuningData		= mt06.old-mert
TuningSubDir		= tuning.data__${Tuning.TuningData}

MertConfig 		= ${Training.Config}
		#TuneSrcPreprocessed and TuneRef should be raw text files, one sentence per line.
TuneSrcPreprocessed	= ${General.DataDir}/data-sets/${Tuning.TuningData}/${Tuning.TuningData}.ar
TuneRef			= ${General.DataDir}/data-sets/${Tuning.TuningData}/${Tuning.TuningData}.en.
N-BEST-LIST-SIZE	= 1000

LAMBDA			= 'd:0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75 lm:1,0.5-1.5;1,-0.5-0.5 tm:0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0.3,0.25-0.75;0,-0.5-0.5 w:0,-0.5-0.5'
		#LAMBDA defines starting point and ranges for the weights we intend to tune (i.e. "d","lm","tm","w" in that order). Format is (WEIGHT-NAME:(INITIAL:MIN_MAX)+)+

Start-Step		= 0 #Start-Step is what iteration to start at (default 1). If you add an 'a' suffix the decoding half of that iteration will be skipped.
	#Start-Step=1	#Start-Step is what iteration to start at (default 1). If you add an 'a' suffix the decoding half of that iteration will be skipped.
reflength		= closest #definition of reference corpus length for BLEU: average, closest or shortest (default)
mertcmd			= 0 #/export/projects/nlp/BOLT-MT/backup/tools/scripts/moses-scripts/2010-08-13/training/mert-moses.pl
OldMertCmd		= 0
#/export/projects/nlp/BOLT-MT/backup/smt-moses/gale/bin/mert-moses.2lm.pl --mosesparallelcmd /export/projects/nlp/BOLT-MT/backup/smt-moses/gale/bin/moses-parallel.pl
#mertcmd=/home2/marine/tools/mert-moses.pl
DecoderFlags		= "-drop-unknown 1 -mp 1 -search-algorithm 1 -cube-pruning-pop-limit 2000 -s 2000 "
	# Additional Decoder's parameters (Note that: "d", "lm", "tm", and "w" are being tuned)
	#t=false	#trace: output is annotated with phrase translations used
	#v=1	#verbose: allows for more detailed output: default (1), summary statistics (2), full progress report (3)
	#s=100	#stack: maximum size of the beam, i.e., the hypothesis stacks (default 100).
	#b=0.03	#beam-threshold: minimum value of a hypothesis relative to the best hypothesis in a stack ( default 0.00001)
	#dl=5	#distortion-limit: maximum distance between two input phrases that are translated to two neighboring output phrases (default 0, no limit)
StatSigFilt		= 0
#########################################################################################################################################################
#########################################################################################################################################################

#--------------------------------------------------------------#
#---------------------- EVALUATION ----------------------------#
#--------------------------------------------------------------#
[BleuEvaluation]
Run			= 0
EvaluationSubDirPrefix	= evaluation/wael-eval_coling12	# it will generate EvaluationSubDir_$EvalName_? depending on the Run_?
ReuseExistingMosesOutput= 0
	
######### Additional Decoder's parameters (Note that: "w", "d", "lm", and "tm" are read from the tuned config file)
t			= false		# output is annotated with phrase translations used
v			= 1		# allows for more detailed output: default (1), summary statistics (2), full progress report (3)
s			= 100		# stack - maximum size of the beam, i.e., the hypothesis stacks (default 100).
b			= 0.0001		# beam-threshold - minimum value of a hypothesis relative to the best hypothesis in a stack ( default 0.00001)
dl			= 4		# distortion-limit - maximum distance between two input phrases that are translated to two neighboring output phrases (default 0, no limit)
Nbest			= 100		# for the option: -n-best-list: file and size of n-best-list to be generated; specify - as the file in order to write to STDOUT
InputType		= 0 		# = {0, 1, 2}: 0 for text, 1 for confusion networks, 2 for lattices
DropUnknown		= "-drop-unknown 1"		#a 0 = Keep unknown words, 1 = Drop unknown words.
otherForTextInput	= ${BleuEvaluation.DropUnknown} -monotone-at-punctuation 1 -search-algorithm 1 -cube-pruning-pop-limit 2000 -s 2000 -report-segmentation -inputtype ${BleuEvaluation.InputType}
otherForLatticeInput	= ${BleuEvaluation.DropUnknown} -monotone-at-punctuation 1 -search-algorithm 1 -cube-pruning-pop-limit 2000 -s 2000 -report-segmentation -inputtype ${BleuEvaluation.InputType} -weight-i 0.2 -max-phrase-length 100000
			  # -mbr -mbr-scale 0.5 
other			= ${BleuEvaluation.otherForLatticeInput}
HowManyTestSets		= 2
SysId			= text-n
StatSigFilt		= 0
REMOOV			= 0
PostprocessingCmd	= 0

######### Moses ini File:
TuningDir		= tuning.weights_${Tuning.TuningData}
MosesIniForTextName	= ${BleuEvaluation.TuningDir}/moses.tuned.ini 			# moses.ini file for textual phrase/reordering tables
MosesIniForBinName	= ${BleuEvaluation.TuningDir}/moses.tuned.bin.ini		# moses.ini file for binarized phrase/reordering tables (used with lattice input)
MosesIniForText		= ${General.OutputDir}/${BleuEvaluation.MosesIniForTextName} 	# moses.ini file for textual phrase/reordering tables
MosesIniForBin		= ${General.OutputDir}/${BleuEvaluation.MosesIniForBinName}	# moses.ini file for binarized phrase/reordering tables (used with lattice input)
UseTextualPhraseTable	= 1

######### Postprocessing:
RemoveMosesTrace	= ${General.PostprocessScriptsDir}/remove_moses_trace.pl 
#RemoveMosesTrace	= cat 	# Uncomment if you Don't want to remove phrase alignment information from Moses output. 
DetokenizerTreeTagger	= perl ${General.PostprocessScriptsDir}/detokenizer.treetagger.perl
#DetokenizerTreeTagger	= cat 	# Uncomment if you Don't want to detokenize using detokenizer.treetagger.perl.
CleanSpeechEffect	= cat #perl /export/home/wael/BBN-Dialect-English-MT/backup/mt-experiments/CleanWeirdAspects-Ref.pl -AaUuOoEec
TrgLangFixer		= perl -pe 's/trglang="en"/trglang="English"/g'

DevtestDir		= /export/home/wael/BBN-Dialect-English-MT/backup/conferences/coling-2012
DevtestDirPrefix	= set-
SrcTxtSuffix		= .ar
SrcXmlSuffix		= .test.sgm
RefXmlSuffix		= .test.ref.sgm

# DA Devtest set-10 (text):
SetName_1		= dev.bl #dev.CAhCm
Run_1			= 1
EvalName_1		= ${BleuEvaluation.SetName_1}.tune_${Tuning.TuningData}.${BleuEvaluation.SysId}
EvalSrcPreprocessed_1	= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_1}/${BleuEvaluation.SetName_1}${BleuEvaluation.SrcTxtSuffix}
EvalSrcXML_1		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_1}/${BleuEvaluation.SetName_1}${BleuEvaluation.SrcXmlSuffix}
EvalRefXML_1		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_1}/${BleuEvaluation.SetName_1}${BleuEvaluation.RefXmlSuffix}
Scorer_1		= ${General.EvaluationScriptDir}/mteval-v11b.pl 	
PostprocessingCmd_1	= ${BleuEvaluation.RemoveMosesTrace} | ${BleuEvaluation.CleanSpeechEffect} | ${BleuEvaluation.DetokenizerTreeTagger} 

# DA Devtest Dev.Baseline (text):
SetName_2		= test.bl
Run_2			= 0
EvalName_2		= ${BleuEvaluation.SetName_2}.tune_${Tuning.TuningData}.${BleuEvaluation.SysId}
EvalSrcPreprocessed_2	= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_2}/${BleuEvaluation.SetName_2}${BleuEvaluation.SrcTxtSuffix}
EvalSrcXML_2		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_2}/${BleuEvaluation.SetName_2}${BleuEvaluation.SrcXmlSuffix}
EvalRefXML_2		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_2}/${BleuEvaluation.SetName_2}${BleuEvaluation.RefXmlSuffix}
Scorer_2		= ${General.EvaluationScriptDir}/mteval-v11b.pl 	
PostprocessingCmd_2	= ${BleuEvaluation.RemoveMosesTrace} | ${BleuEvaluation.CleanSpeechEffect} | ${BleuEvaluation.DetokenizerTreeTagger} 

# DA Devtest Test.Baseline (text):
SetName_3		= 10.bl
Run_3			= 0
EvalName_3		= ${BleuEvaluation.SetName_3}.tune_${Tuning.TuningData}.${BleuEvaluation.SysId}
EvalSrcPreprocessed_3	= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_3}/${BleuEvaluation.SetName_3}${BleuEvaluation.SrcTxtSuffix}
EvalSrcXML_3		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_3}/${BleuEvaluation.SetName_3}${BleuEvaluation.SrcXmlSuffix}
EvalRefXML_3		= ${BleuEvaluation.DevtestDir}/${BleuEvaluation.DevtestDirPrefix}${BleuEvaluation.SetName_3}/${BleuEvaluation.SetName_3}${BleuEvaluation.RefXmlSuffix}
Scorer_3		= ${General.EvaluationScriptDir}/mteval-v11b.pl 	
PostprocessingCmd_3	= ${BleuEvaluation.RemoveMosesTrace} | ${BleuEvaluation.CleanSpeechEffect} | ${BleuEvaluation.DetokenizerTreeTagger} 

#########################################################################################################################################################
#########################################################################################################################################################

